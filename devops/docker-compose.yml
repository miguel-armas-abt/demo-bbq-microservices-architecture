version: '3.1'

services:
  invoice-v1:
    container_name: invoice-v1
    image: miguelarmasabt/invoice:v1.0.1
    restart: always
    environment: 
      - KAFKA_DOMAIN=kafka-server:9093
      - POSTGRESQL_DOMAIN=postgres-db:5432
      - POSTGRESQL_USERNAME=bbq_user
      - PRODUCT_DOMAIN=product-v1:8017
      - CONFIG_SERVER-DOMAIN=config-server-v1:8888
      - RULES_PROCESSOR-DOMAIN=rules-processor-v1:8019
      - JAVA_OPTS=-Xms256M -Xmx256M
    depends_on:
      - config-server-v1
      - postgres-db
      - kafka-server
    
    networks:
      - dev_environment
    ports:
      - "8014:8014"

  menu-v1:
    container_name: menu-v1
    image: miguelarmasabt/menu:v1.0.1
    restart: always
    environment: 
      - CONFIG_SERVER-DOMAIN=config-server-v1:8888
      - MYSQL_DOMAIN=mysql-db:3306
      - MYSQL_USERNAME=bbq_user
      - PRODUCT_DOMAIN=product-v1:8017
      - JAVA_OPTS=-Xms256M -Xmx256M
    depends_on:
      - config-server-v1
      - mysql-db
    
    networks:
      - dev_environment
    ports:
      - "8012:8012"

  menu-v2:
    container_name: menu-v2
    image: miguelarmasabt/menu:v2.0.1
    restart: always
    environment: 
      - MYSQL_DOMAIN=mysql-db:3306
      - MYSQL_USERNAME=bbq_user
      - PRODUCT_DOMAIN=product-v1:8017
      - JAVA_OPTS=-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager -Dquarkus-profile=dev
    depends_on:
      - mysql-db
    
    networks:
      - dev_environment
    ports:
      - "8016:8016"

  order-hub-v1:
    container_name: order-hub-v1
    image: miguelarmasabt/order-hub:v1.0.1
    restart: always
    environment: 
      - CONFIG_SERVER-DOMAIN=config-server-v1:8888
      - MENU_V1-DOMAIN=menu-v1:8012
      - MENU_V2-DOMAIN=menu-v2:8016
      - TABLE_PLACEMENT-DOMAIN=table-placement-v1:8013
      - INVOICE_DOMAIN=invoice-v1:8014
      - MENU_REPOSITORY-SELECTOR=com.demo.bbq.entrypoint.menu.repository.MenuV1Repository
      - JAVA_OPTS=-Xms256M -Xmx256M
      - requests:
      - MEMORY=256Mi
      - CPU=500m
      - limits:
      - MEMORY=512Mi
      - CPU=1
      - PATH=/actuator/health/liveness
      - PORT=8018
      - INITIALDELAYSECONDS=30
      - PERIODSECONDS=30
      - TIMEOUTSECONDS=5
      - FAILURETHRESHOLD=3
      - PATH=/actuator/health/readiness
      - PORT=8018
      - INITIALDELAYSECONDS=30
      - PERIODSECONDS=30
      - HOSTPORT=8018
      - DEPENDENCIES=config-server-v1;redis-server
      - VOLUMES=none
    depends_on:
      - config-server-v1
      - redis-server
    
    networks:
      - dev_environment
    ports:
      - "8018:8018"

  payment-v1:
    container_name: payment-v1
    image: miguelarmasabt/payment:v1.0.1
    restart: always
    environment: 
      - CONFIG_SERVER-DOMAIN=config-server-v1:8888
      - MYSQL_DOMAIN=mysql-db:3306
      - MYSQL_USERNAME=bbq_user
      - KAFKA_DOMAIN=kafka-server:9093
      - CREATE_TOPICS=true
      - JAVA_OPTS=-Xms256M -Xmx256M
    depends_on:
      - config-server-v1
      - mysql-db
      - kafka-server
    
    networks:
      - dev_environment
    ports:
      - "8015:8015"

  product-v1:
    container_name: product-v1
    image: miguelarmasabt/product:v1.0.1
    restart: always
    environment: 
      - MYSQL_HOST=mysql-db:3306
      - MYSQL_USERNAME=bbq_user
      - DATABASE=db_products
    depends_on:
      - mysql-db
    
    networks:
      - dev_environment
    ports:
      - "8017:8017"

  rules-processor-v1:
    container_name: rules-processor-v1
    image: miguelarmasabt/rules-processor:v1.0.1
    restart: always
    environment: 
      - CONFIG_SERVER-DOMAIN=config-server-v1:8888
      - JAVA_OPTS=-Xms256M -Xmx256M
      - requests:
      - MEMORY=256Mi
      - CPU=500m
      - limits:
      - MEMORY=512Mi
      - CPU=1
      - PATH=/actuator/health/liveness
      - PORT=8019
      - INITIALDELAYSECONDS=30
      - PERIODSECONDS=30
      - TIMEOUTSECONDS=5
      - FAILURETHRESHOLD=3
      - PATH=/actuator/health/readiness
      - PORT=8019
      - INITIALDELAYSECONDS=30
      - PERIODSECONDS=30
      - HOSTPORT=8019
      - DEPENDENCIES=config-server-v1
      - VOLUMES=none
    depends_on:
      - config-server-v1
    
    networks:
      - dev_environment
    ports:
      - "8019:8019"

  table-placement-v1:
    container_name: table-placement-v1
    image: miguelarmasabt/table-placement:v1.0.1
    restart: always
    environment: 
      - CONFIG_SERVER-DOMAIN=config-server-v1:8888
      - JAVA_OPTS=-Xms256M -Xmx256M
    depends_on:
      - config-server-v1
      - mongo-db
    
    networks:
      - dev_environment
    ports:
      - "8013:8013"

  api-gateway-v1:
    container_name: api-gateway-v1
    image: miguelarmasabt/api-gateway:v1.0.1
    restart: always
    environment: 
      - ORDER_HUB-DOMAIN=order-hub-v1:8018
      - ENABLE_AUTH=false
      - AUTH_ADAPTER-DOMAIN=auth-adapter-v1:8011
      - JAVA_OPTS=-Xms256M -Xmx256M
      - requests:
      - MEMORY=256Mi
      - CPU=500m
      - limits:
      - MEMORY=512Mi
      - CPU=1
      - PATH=/actuator/health/liveness
      - PORT=8010
      - INITIALDELAYSECONDS=30
      - PERIODSECONDS=30
      - TIMEOUTSECONDS=5
      - FAILURETHRESHOLD=3
      - PATH=/actuator/health/readiness
      - PORT=8010
      - INITIALDELAYSECONDS=30
      - PERIODSECONDS=30
      - HOSTPORT=8010
      - DEPENDENCIES=none
    depends_on:
      - none
    volumes:
 
    networks:
      - dev_environment
    ports:
      - "8010:8010"

  auth-adapter-v1:
    container_name: auth-adapter-v1
    image: miguelarmasabt/auth-adapter:v1.0.1
    restart: always
    environment: 
      - JAVA_OPTS=-Xms256M -Xmx256M
      - requests:
      - MEMORY=256Mi
      - CPU=500m
      - limits:
      - MEMORY=512Mi
      - CPU=1
      - PATH=/actuator/health/liveness
      - PORT=8011
      - INITIALDELAYSECONDS=30
      - PERIODSECONDS=30
      - TIMEOUTSECONDS=5
      - FAILURETHRESHOLD=3
      - PATH=/actuator/health/readiness
      - PORT=8011
      - INITIALDELAYSECONDS=30
      - PERIODSECONDS=30
      - HOSTPORT=8011
      - DEPENDENCIES=none
    depends_on:
      - none
    volumes:
 
    networks:
      - dev_environment
    ports:
      - "8011:8011"

  config-server-v1:
    container_name: config-server-v1
    image: miguelarmasabt/config-server:v1.0.1
    restart: always
    environment: 
      - KEYCLOAK_DOMAIN=keycloak-server:8080
      - JAVA_OPTS=-Xms256M -Xmx256M
    depends_on:
      - none
    volumes:
 
    networks:
      - dev_environment
    ports:
      - "8888:8888"

  mock-service-v1:
    container_name: mock-service-v1
    image: miguelarmasabt/mock-service:v1.0.1
    restart: always
    environment: 
      - MOCK_PORT=8021
      - JAVA_OPTS=-Xms256M -Xmx256M
      - requests:
      - MEMORY=256Mi
      - CPU=500m
      - limits:
      - MEMORY=512Mi
      - CPU=1
      - PATH=/actuator/health/liveness
      - PORT=8020
      - INITIALDELAYSECONDS=30
      - PERIODSECONDS=30
      - TIMEOUTSECONDS=5
      - FAILURETHRESHOLD=3
      - PATH=/actuator/health/readiness
      - PORT=8020
      - INITIALDELAYSECONDS=30
      - PERIODSECONDS=30
      - HOSTPORT=8020
      - DEPENDENCIES=none
    depends_on:
      - none
    volumes:
 
    networks:
      - dev_environment
    ports:
      - "8020:8021"

  keycloak-server:
    container_name: keycloak-server
    image: jboss/keycloak:16.0.0
    restart: always
    environment: 
      - KEYCLOAK_USER=admin
      - DB_VENDOR=H2
    depends_on:
      - none
    volumes:
 
    networks:
      - dev_environment
    ports:
      - "8091:8080"

  redis-server:
    container_name: redis-server
    image: redis:latest
    restart: always
    environment: 

    depends_on:
      - none
    volumes:
 
    networks:
      - dev_environment
    ports:
      - "6379:6379"

  zookeeper-server:
    container_name: zookeeper-server
    image: confluentinc/cp-zookeeper:7.3.2
    restart: always
    environment: 
      - ZOOKEEPER_CLIENT-PORT=2181
      - ZOOKEEPER_SERVERS=zookeeper-server:2888:3888
      - ZOOKEEPER_SERVER-ID=1
      - requests:
      - MEMORY=256Mi
      - CPU=500m
      - limits:
      - MEMORY=512Mi
      - CPU=1
      - HOSTPORT=2181
      - DEPENDENCIES=none
    depends_on:
      - none
    volumes:
 
    networks:
      - dev_environment
    ports:
      - "2181:2181"

  kafka-server:
    container_name: kafka-server
    image: confluentinc/cp-kafka:7.3.2
    restart: always
    environment: 
      - KAFKA_ADVERTISED-LISTENERS=INTERNAL://kafka-server:9093,EXTERNAL://-127.0.0.1:9092,DOCKER://host.docker.internal:29092
      - KAFKA_LISTENER-SECURITY_PROTOCOL-MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      - KAFKA_INTER-BROKER_LISTENER-NAME=INTERNAL
      - KAFKA_ZOOKEEPER-CONNECT=zookeeper-server:2181
      - KAFKA_BROKER-ID=1
      - KAFKA_LOG4J-LOGGERS=kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO
      - KAFKA_OFFSETS-TOPIC_REPLICATION-FACTOR=1
      - KAFKA_TRANSACTION-STATE_LOG-REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION-STATE_LOG-MIN_ISR=1
      - KAFKA_JMX-PORT=9999
      - KAFKA_JMX-HOSTNAME=127.0.0.1
      - KAFKA_AUTHORIZER-CLASS_NAME=kafka.security.authorizer.AclAuthorizer
      - KAFKA_ALLOW-EVERYONE_IF-NO_ACL-FOUND=true
      - requests:
      - MEMORY=256Mi
      - CPU=500m
      - limits:
      - MEMORY=512Mi
      - CPU=1
      - HOSTPORT=9092
      - DEPENDENCIES=zookeeper-server
    depends_on:
      - zookeeper-server
    volumes:
 
    networks:
      - dev_environment
    ports:
      - "9092:9092"

  mongo-db:
    container_name: mongo-db
    image: mongo:latest
    restart: always
    environment: 

    depends_on:
      - none
    volumes:
      - ./../environment/mongo-db/init:/docker-entrypoint-initdb.d
      - ./../environment/mongo-db/data:/data/db
    networks:
      - dev_environment
    ports:
      - "27017:27017"

  mysql-db:
    container_name: mysql-db
    image: mysql:latest
    restart: always
    environment: 

    depends_on:
      - none
    volumes:
      - ./../environment/mysql-db/init:/docker-entrypoint-initdb.d
      - ./../environment/mysql-db/data:/data/db
    networks:
      - dev_environment
    ports:
      - "3306:3306"

  postgres-db:
    container_name: postgres-db
    image: postgres:latest
    restart: always
    environment: 

    depends_on:
      - none
    volumes:
      - ./../environment/postgres-db/init:/docker-entrypoint-initdb.d
      - ./../environment/postgres-db/data:/data/db
    networks:
      - dev_environment
    ports:
      - "5432:5432"


networks:
  dev_environment:
    driver: bridge
    #activate ipv6
    driver_opts:
      com.docker.network.enable_ipv6: "true"
    #IP Adress Manager
    ipam:
      driver: default
      config:
        -
          subnet: 172.16.232.0/24
          gateway: 172.16.232.1
        -
          subnet: "2001:3974:3979::/64"
          gateway: "2001:3974:3979::1"
